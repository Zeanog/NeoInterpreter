//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.5 C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g 2014-07-09 20:40:45

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using Neo;
using System;


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;
using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

using Antlr.Runtime.Debug;
using IOException = System.IO.IOException;


[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.5")]
[System.CLSCompliant(false)]
public partial class NeoPreTreePass1 : DebugAntlr.Runtime.Tree.TreeParser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "ASSIGNMENT", "COMMENT", "DECLARATION", "FILE", "FLOAT_VALUE", "FUNCTION_ARGUMENT", "FUNCTION_ARGUMENTS", "FUNCTION_BODY", "FUNCTION_CALL", "FUNCTION_DEF", "FUNCTION_DEFS", "ID", "INT_VALUE", "LITERAL", "PARAM", "PARAMS", "PARENEXP", "PROGRAM", "SCRIPT", "TYPE_FLOAT", "TYPE_INT", "UNARY", "VARIABLE", "WS", "'('", "')'", "'*'", "'+'", "','", "'-'", "'/'", "';'", "'='", "'{'", "'}'", "FLOAT", "INT", "'float'", "'int'"
	};
	public const int EOF=-1;
	public const int T__28=28;
	public const int T__29=29;
	public const int T__30=30;
	public const int T__31=31;
	public const int T__32=32;
	public const int T__33=33;
	public const int T__34=34;
	public const int T__35=35;
	public const int T__36=36;
	public const int T__37=37;
	public const int T__38=38;
	public const int ASSIGNMENT=4;
	public const int COMMENT=5;
	public const int DECLARATION=6;
	public const int FILE=7;
	public const int FLOAT_VALUE=8;
	public const int FUNCTION_ARGUMENT=9;
	public const int FUNCTION_ARGUMENTS=10;
	public const int FUNCTION_BODY=11;
	public const int FUNCTION_CALL=12;
	public const int FUNCTION_DEF=13;
	public const int FUNCTION_DEFS=14;
	public const int ID=15;
	public const int INT_VALUE=16;
	public const int LITERAL=17;
	public const int PARAM=18;
	public const int PARAMS=19;
	public const int PARENEXP=20;
	public const int PROGRAM=21;
	public const int SCRIPT=22;
	public const int TYPE_FLOAT=23;
	public const int TYPE_INT=24;
	public const int UNARY=25;
	public const int VARIABLE=26;
	public const int WS=27;
	public const int T__41=41;
	public const int T__42=42;
	public const int FLOAT=39;
	public const int INT=40;

	public static readonly string[] ruleNames =
		new string[]
		{
			"invalidRule", "functionDefs", "param", "body", "functionCall", "argument", 
		"value", "file", "unaryExp", "addSubExp", "mulDivExp", "functionDef", 
		"parameters", "script", "declaration", "assignment", "program", "arguments", 
		"statement"
		};

		int ruleLevel = 0;
		public virtual int RuleLevel { get { return ruleLevel; } }
		public virtual void IncRuleLevel() { ruleLevel++; }
		public virtual void DecRuleLevel() { ruleLevel--; }
		public NeoPreTreePass1( ITreeNodeStream input )
			: this( input, DebugEventSocketProxy.DefaultDebuggerPort, new RecognizerSharedState() )
		{
		}
		public NeoPreTreePass1( ITreeNodeStream input, int port, RecognizerSharedState state )
			: base( input, state )
		{
			DebugEventSocketProxy proxy = new DebugEventSocketProxy( this, port, input.TreeAdaptor );
			DebugListener = proxy;
			ITreeNodeStream = new DebugITreeNodeStream( input, proxy );
			try
			{
				proxy.Handshake();
			}
			catch ( IOException ioe )
			{
				ReportError( ioe );
			}
			ITreeAdaptor treeAdaptor = default(ITreeAdaptor);
			CreateTreeAdaptor(ref treeAdaptor);
			TreeAdaptor = treeAdaptor ?? new CommonTreeAdaptor();
			ITreeAdaptor adap = new CommonTreeAdaptor();
			TreeAdaptor = adap;
			proxy.TreeAdaptor = adap;
		}

	public NeoPreTreePass1( ITreeNodeStream input, IDebugEventListener dbg )
		: base( input, dbg )
	{
		ITreeAdaptor treeAdaptor = default(ITreeAdaptor);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new CommonTreeAdaptor();
		ITreeAdaptor adap = new CommonTreeAdaptor();
		TreeAdaptor = adap;


	}

	protected virtual bool EvalPredicate( bool result, string predicate )
	{
		dbg.SemanticPredicate( result, predicate );
		return result;
	}

	// Implement this function in your helper file to use a custom tree adaptor
	partial void InitializeTreeAdaptor();
	protected DebugTreeAdaptor adaptor;

	public ITreeAdaptor TreeAdaptor
	{
		get
		{
			return adaptor;
		}
		set
		{
			this.adaptor = new DebugTreeAdaptor(dbg,adaptor);


		}
	}


	public override string[] TokenNames { get { return NeoPreTreePass1.tokenNames; } }
	public override string GrammarFileName { get { return "C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g"; } }


	public AstTreeRuleReturnScope<CommonTree, CommonTree> Process() {
		//TreeAdaptor = new CommonTreeAdaptor();
		return file();
	}


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	partial void EnterRule_file();
	partial void LeaveRule_file();
	// $ANTLR start "file"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:22:1: file : (| ^( FILE script ) );
	[GrammarRule("file")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> file()
	{
		EnterRule_file();
		EnterRule("file", 1);
		TraceIn("file", 1);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree FILE1 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> script2 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree FILE1_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "file");
		DebugLocation(22, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:22:6: (| ^( FILE script ) )
			int alt1=2;
			try { DebugEnterDecision(1, false);
			int LA1_1 = input.LA(1);

			if ((LA1_1==EOF))
			{
				alt1 = 1;
			}
			else if ((LA1_1==FILE))
			{
				alt1 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 1, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(1); }
			switch (alt1)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:23:2: 
				{
				root_0 = (CommonTree)adaptor.Nil();

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:23:4: ^( FILE script )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(23, 4);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(23, 6);

				_last = (CommonTree)input.LT(1);
				FILE1=(CommonTree)Match(input,FILE,Follow._FILE_in_file58); 
				FILE1_tree = (CommonTree)adaptor.DupNode(FILE1);


				root_1 = (CommonTree)adaptor.BecomeRoot(FILE1_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(23, 11);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._script_in_file60);
				script2=script();
				PopFollow();

				adaptor.AddChild(root_1, script2.Tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}


				}
				break;

			}
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("file", 1);
			LeaveRule("file", 1);
			LeaveRule_file();
		}
		DebugLocation(24, 1);
		} finally { DebugExitRule(GrammarFileName, "file"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "file"

	partial void EnterRule_script();
	partial void LeaveRule_script();
	// $ANTLR start "script"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:26:1: script : ( ^( SCRIPT functionDefs ( program )? ) | ^( SCRIPT program ) );
	[GrammarRule("script")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> script()
	{
		EnterRule_script();
		EnterRule("script", 2);
		TraceIn("script", 2);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree SCRIPT3 = default(CommonTree);
		CommonTree SCRIPT6 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> functionDefs4 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> program5 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> program7 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree SCRIPT3_tree = default(CommonTree);
		CommonTree SCRIPT6_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "script");
		DebugLocation(26, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:26:9: ( ^( SCRIPT functionDefs ( program )? ) | ^( SCRIPT program ) )
			int alt3=2;
			try { DebugEnterDecision(3, false);
			int LA3_1 = input.LA(1);

			if ((LA3_1==SCRIPT))
			{
				int LA3_2 = input.LA(2);

				if ((LA3_2==DOWN))
				{
					int LA3_3 = input.LA(3);

					if ((LA3_3==FUNCTION_DEFS))
					{
						alt3 = 1;
					}
					else if ((LA3_3==PROGRAM))
					{
						alt3 = 2;
					}
					else
					{
						NoViableAltException nvae = new NoViableAltException("", 3, 2, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					NoViableAltException nvae = new NoViableAltException("", 3, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 3, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(3); }
			switch (alt3)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:26:11: ^( SCRIPT functionDefs ( program )? )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(26, 11);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(26, 13);

				_last = (CommonTree)input.LT(1);
				SCRIPT3=(CommonTree)Match(input,SCRIPT,Follow._SCRIPT_in_script74); 
				SCRIPT3_tree = (CommonTree)adaptor.DupNode(SCRIPT3);


				root_1 = (CommonTree)adaptor.BecomeRoot(SCRIPT3_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(26, 20);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._functionDefs_in_script76);
				functionDefs4=functionDefs();
				PopFollow();

				adaptor.AddChild(root_1, functionDefs4.Tree);

				DebugLocation(26, 33);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:26:33: ( program )?
				int alt2=2;
				try { DebugEnterSubRule(2);
				try { DebugEnterDecision(2, false);
				int LA2_1 = input.LA(1);

				if ((LA2_1==PROGRAM))
				{
					alt2 = 1;
				}
				} finally { DebugExitDecision(2); }
				switch (alt2)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:26:34: program
					{
					DebugLocation(26, 34);

					_last = (CommonTree)input.LT(1);
					PushFollow(Follow._program_in_script79);
					program5=program();
					PopFollow();

					adaptor.AddChild(root_1, program5.Tree);


					}
					break;

				}
				} finally { DebugExitSubRule(2); }


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}

				DebugLocation(26, 45);


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:27:4: ^( SCRIPT program )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(27, 4);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(27, 6);

				_last = (CommonTree)input.LT(1);
				SCRIPT6=(CommonTree)Match(input,SCRIPT,Follow._SCRIPT_in_script90); 
				SCRIPT6_tree = (CommonTree)adaptor.DupNode(SCRIPT6);


				root_1 = (CommonTree)adaptor.BecomeRoot(SCRIPT6_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(27, 13);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._program_in_script92);
				program7=program();
				PopFollow();

				adaptor.AddChild(root_1, program7.Tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}

				DebugLocation(27, 22);


				}
				break;

			}
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("script", 2);
			LeaveRule("script", 2);
			LeaveRule_script();
		}
		DebugLocation(28, 1);
		} finally { DebugExitRule(GrammarFileName, "script"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "script"

	partial void EnterRule_functionDefs();
	partial void LeaveRule_functionDefs();
	// $ANTLR start "functionDefs"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:30:1: functionDefs : ^( FUNCTION_DEFS ( functionDef )+ ) ;
	[GrammarRule("functionDefs")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> functionDefs()
	{
		EnterRule_functionDefs();
		EnterRule("functionDefs", 3);
		TraceIn("functionDefs", 3);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree FUNCTION_DEFS8 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> functionDef9 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree FUNCTION_DEFS8_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "functionDefs");
		DebugLocation(30, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:31:2: ( ^( FUNCTION_DEFS ( functionDef )+ ) )
			DebugEnterAlt(1);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:31:4: ^( FUNCTION_DEFS ( functionDef )+ )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(31, 4);

			_last = (CommonTree)input.LT(1);
			{
			CommonTree _save_last_1 = _last;
			CommonTree _first_1 = default(CommonTree);
			CommonTree root_1 = (CommonTree)adaptor.Nil();
			DebugLocation(31, 6);

			_last = (CommonTree)input.LT(1);
			FUNCTION_DEFS8=(CommonTree)Match(input,FUNCTION_DEFS,Follow._FUNCTION_DEFS_in_functionDefs108); 
			FUNCTION_DEFS8_tree = (CommonTree)adaptor.DupNode(FUNCTION_DEFS8);


			root_1 = (CommonTree)adaptor.BecomeRoot(FUNCTION_DEFS8_tree, root_1);


			Match(input, TokenTypes.Down, null); 
			DebugLocation(31, 20);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:31:20: ( functionDef )+
			int cnt4=0;
			try { DebugEnterSubRule(4);
			while (true)
			{
				int alt4=2;
				try { DebugEnterDecision(4, false);
				int LA4_1 = input.LA(1);

				if ((LA4_1==FUNCTION_DEF))
				{
					alt4 = 1;
				}


				} finally { DebugExitDecision(4); }
				switch (alt4)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:31:20: functionDef
					{
					DebugLocation(31, 20);

					_last = (CommonTree)input.LT(1);
					PushFollow(Follow._functionDef_in_functionDefs110);
					functionDef9=functionDef();
					PopFollow();

					adaptor.AddChild(root_1, functionDef9.Tree);


					}
					break;

				default:
					if (cnt4 >= 1)
						goto loop4;

					EarlyExitException eee4 = new EarlyExitException( 4, input );
					DebugRecognitionException(eee4);
					throw eee4;
				}
				cnt4++;
			}
			loop4:
				;

			} finally { DebugExitSubRule(4); }


			Match(input, TokenTypes.Up, null); 
			adaptor.AddChild(root_0, root_1);
			_last = _save_last_1;
			}


			}

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("functionDefs", 3);
			LeaveRule("functionDefs", 3);
			LeaveRule_functionDefs();
		}
		DebugLocation(32, 1);
		} finally { DebugExitRule(GrammarFileName, "functionDefs"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "functionDefs"

	partial void EnterRule_functionDef();
	partial void LeaveRule_functionDef();
	// $ANTLR start "functionDef"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:34:1: functionDef : ^( FUNCTION_DEF f= ID (c= parameters )? (numDecls= body )? ) ;
	[GrammarRule("functionDef")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> functionDef()
	{
		EnterRule_functionDef();
		EnterRule("functionDef", 4);
		TraceIn("functionDef", 4);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree f = default(CommonTree);
		CommonTree FUNCTION_DEF10 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> c = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> numDecls = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree f_tree = default(CommonTree);
		CommonTree FUNCTION_DEF10_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "functionDef");
		DebugLocation(34, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:35:2: ( ^( FUNCTION_DEF f= ID (c= parameters )? (numDecls= body )? ) )
			DebugEnterAlt(1);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:35:4: ^( FUNCTION_DEF f= ID (c= parameters )? (numDecls= body )? )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(35, 4);

			_last = (CommonTree)input.LT(1);
			{
			CommonTree _save_last_1 = _last;
			CommonTree _first_1 = default(CommonTree);
			CommonTree root_1 = (CommonTree)adaptor.Nil();
			DebugLocation(35, 6);

			_last = (CommonTree)input.LT(1);
			FUNCTION_DEF10=(CommonTree)Match(input,FUNCTION_DEF,Follow._FUNCTION_DEF_in_functionDef125); 
			FUNCTION_DEF10_tree = (CommonTree)adaptor.DupNode(FUNCTION_DEF10);


			root_1 = (CommonTree)adaptor.BecomeRoot(FUNCTION_DEF10_tree, root_1);


			Match(input, TokenTypes.Down, null); 
			DebugLocation(35, 20);

			_last = (CommonTree)input.LT(1);
			f=(CommonTree)Match(input,ID,Follow._ID_in_functionDef129); 
			f_tree = (CommonTree)adaptor.DupNode(f);


			adaptor.AddChild(root_1, f_tree);

			DebugLocation(35, 24);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:35:24: (c= parameters )?
			int alt5=2;
			try { DebugEnterSubRule(5);
			try { DebugEnterDecision(5, false);
			int LA5_1 = input.LA(1);

			if ((LA5_1==PARAMS))
			{
				alt5 = 1;
			}
			} finally { DebugExitDecision(5); }
			switch (alt5)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:35:25: c= parameters
				{
				DebugLocation(35, 26);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._parameters_in_functionDef134);
				c=parameters();
				PopFollow();

				adaptor.AddChild(root_1, c.Tree);

				DebugLocation(35, 38);


				}
				break;

			}
			} finally { DebugExitSubRule(5); }

			DebugLocation(35, 43);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:35:43: (numDecls= body )?
			int alt6=2;
			try { DebugEnterSubRule(6);
			try { DebugEnterDecision(6, false);
			int LA6_1 = input.LA(1);

			if ((LA6_1==FUNCTION_BODY))
			{
				alt6 = 1;
			}
			} finally { DebugExitDecision(6); }
			switch (alt6)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:35:44: numDecls= body
				{
				DebugLocation(35, 52);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._body_in_functionDef143);
				numDecls=body();
				PopFollow();

				adaptor.AddChild(root_1, numDecls.Tree);

				DebugLocation(35, 58);


				}
				break;

			}
			} finally { DebugExitSubRule(6); }


			Match(input, TokenTypes.Up, null); 
			adaptor.AddChild(root_0, root_1);
			_last = _save_last_1;
			}

			DebugLocation(35, 64);


			}

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("functionDef", 4);
			LeaveRule("functionDef", 4);
			LeaveRule_functionDef();
		}
		DebugLocation(36, 1);
		} finally { DebugExitRule(GrammarFileName, "functionDef"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "functionDef"

	partial void EnterRule_body();
	partial void LeaveRule_body();
	// $ANTLR start "body"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:38:1: body : ^( FUNCTION_BODY (s= statement )+ ) ;
	[GrammarRule("body")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> body()
	{
		EnterRule_body();
		EnterRule("body", 5);
		TraceIn("body", 5);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree FUNCTION_BODY11 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> s = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree FUNCTION_BODY11_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "body");
		DebugLocation(38, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:39:2: ( ^( FUNCTION_BODY (s= statement )+ ) )
			DebugEnterAlt(1);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:39:4: ^( FUNCTION_BODY (s= statement )+ )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(39, 4);

			_last = (CommonTree)input.LT(1);
			{
			CommonTree _save_last_1 = _last;
			CommonTree _first_1 = default(CommonTree);
			CommonTree root_1 = (CommonTree)adaptor.Nil();
			DebugLocation(39, 6);

			_last = (CommonTree)input.LT(1);
			FUNCTION_BODY11=(CommonTree)Match(input,FUNCTION_BODY,Follow._FUNCTION_BODY_in_body163); 
			FUNCTION_BODY11_tree = (CommonTree)adaptor.DupNode(FUNCTION_BODY11);


			root_1 = (CommonTree)adaptor.BecomeRoot(FUNCTION_BODY11_tree, root_1);


			Match(input, TokenTypes.Down, null); 
			DebugLocation(39, 20);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:39:20: (s= statement )+
			int cnt7=0;
			try { DebugEnterSubRule(7);
			while (true)
			{
				int alt7=2;
				try { DebugEnterDecision(7, false);
				int LA7_1 = input.LA(1);

				if ((LA7_1==ASSIGNMENT||LA7_1==DECLARATION||LA7_1==FUNCTION_CALL))
				{
					alt7 = 1;
				}


				} finally { DebugExitDecision(7); }
				switch (alt7)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:39:21: s= statement
					{
					DebugLocation(39, 22);

					_last = (CommonTree)input.LT(1);
					PushFollow(Follow._statement_in_body168);
					s=statement();
					PopFollow();

					adaptor.AddChild(root_1, s.Tree);

					DebugLocation(39, 33);


					}
					break;

				default:
					if (cnt7 >= 1)
						goto loop7;

					EarlyExitException eee7 = new EarlyExitException( 7, input );
					DebugRecognitionException(eee7);
					throw eee7;
				}
				cnt7++;
			}
			loop7:
				;

			} finally { DebugExitSubRule(7); }


			Match(input, TokenTypes.Up, null); 
			adaptor.AddChild(root_0, root_1);
			_last = _save_last_1;
			}

			DebugLocation(39, 39);
			  

			}

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("body", 5);
			LeaveRule("body", 5);
			LeaveRule_body();
		}
		DebugLocation(40, 1);
		} finally { DebugExitRule(GrammarFileName, "body"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "body"

	partial void EnterRule_parameters();
	partial void LeaveRule_parameters();
	// $ANTLR start "parameters"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:42:1: parameters : ^( PARAMS ( param )+ ) ;
	[GrammarRule("parameters")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> parameters()
	{
		EnterRule_parameters();
		EnterRule("parameters", 6);
		TraceIn("parameters", 6);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree PARAMS12 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> param13 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree PARAMS12_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "parameters");
		DebugLocation(42, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:43:2: ( ^( PARAMS ( param )+ ) )
			DebugEnterAlt(1);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:43:4: ^( PARAMS ( param )+ )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(43, 4);

			_last = (CommonTree)input.LT(1);
			{
			CommonTree _save_last_1 = _last;
			CommonTree _first_1 = default(CommonTree);
			CommonTree root_1 = (CommonTree)adaptor.Nil();
			DebugLocation(43, 6);

			_last = (CommonTree)input.LT(1);
			PARAMS12=(CommonTree)Match(input,PARAMS,Follow._PARAMS_in_parameters188); 
			PARAMS12_tree = (CommonTree)adaptor.DupNode(PARAMS12);


			root_1 = (CommonTree)adaptor.BecomeRoot(PARAMS12_tree, root_1);


			Match(input, TokenTypes.Down, null); 
			DebugLocation(43, 13);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:43:13: ( param )+
			int cnt8=0;
			try { DebugEnterSubRule(8);
			while (true)
			{
				int alt8=2;
				try { DebugEnterDecision(8, false);
				int LA8_1 = input.LA(1);

				if ((LA8_1==PARAM))
				{
					alt8 = 1;
				}


				} finally { DebugExitDecision(8); }
				switch (alt8)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:43:14: param
					{
					DebugLocation(43, 14);

					_last = (CommonTree)input.LT(1);
					PushFollow(Follow._param_in_parameters191);
					param13=param();
					PopFollow();

					adaptor.AddChild(root_1, param13.Tree);

					DebugLocation(43, 20);


					}
					break;

				default:
					if (cnt8 >= 1)
						goto loop8;

					EarlyExitException eee8 = new EarlyExitException( 8, input );
					DebugRecognitionException(eee8);
					throw eee8;
				}
				cnt8++;
			}
			loop8:
				;

			} finally { DebugExitSubRule(8); }


			Match(input, TokenTypes.Up, null); 
			adaptor.AddChild(root_0, root_1);
			_last = _save_last_1;
			}


			}

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("parameters", 6);
			LeaveRule("parameters", 6);
			LeaveRule_parameters();
		}
		DebugLocation(44, 1);
		} finally { DebugExitRule(GrammarFileName, "parameters"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "parameters"

	partial void EnterRule_param();
	partial void LeaveRule_param();
	// $ANTLR start "param"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:46:1: param : ( ^( PARAM 'int' ID ) -> ^( PARAM TYPE_INT ID ) | ^( PARAM 'float' ID ) -> ^( PARAM TYPE_FLOAT ID ) );
	[GrammarRule("param")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> param()
	{
		EnterRule_param();
		EnterRule("param", 7);
		TraceIn("param", 7);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree PARAM14 = default(CommonTree);
		CommonTree string_literal15 = default(CommonTree);
		CommonTree ID16 = default(CommonTree);
		CommonTree PARAM17 = default(CommonTree);
		CommonTree string_literal18 = default(CommonTree);
		CommonTree ID19 = default(CommonTree);

		CommonTree PARAM14_tree = default(CommonTree);
		CommonTree string_literal15_tree = default(CommonTree);
		CommonTree ID16_tree = default(CommonTree);
		CommonTree PARAM17_tree = default(CommonTree);
		CommonTree string_literal18_tree = default(CommonTree);
		CommonTree ID19_tree = default(CommonTree);
		RewriteRuleNodeStream stream_PARAM=new RewriteRuleNodeStream(adaptor,"token PARAM");
		RewriteRuleNodeStream stream_42=new RewriteRuleNodeStream(adaptor,"token 42");
		RewriteRuleNodeStream stream_41=new RewriteRuleNodeStream(adaptor,"token 41");
		RewriteRuleNodeStream stream_ID=new RewriteRuleNodeStream(adaptor,"token ID");
		try { DebugEnterRule(GrammarFileName, "param");
		DebugLocation(46, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:47:2: ( ^( PARAM 'int' ID ) -> ^( PARAM TYPE_INT ID ) | ^( PARAM 'float' ID ) -> ^( PARAM TYPE_FLOAT ID ) )
			int alt9=2;
			try { DebugEnterDecision(9, false);
			int LA9_1 = input.LA(1);

			if ((LA9_1==PARAM))
			{
				int LA9_2 = input.LA(2);

				if ((LA9_2==DOWN))
				{
					int LA9_3 = input.LA(3);

					if ((LA9_3==42))
					{
						alt9 = 1;
					}
					else if ((LA9_3==41))
					{
						alt9 = 2;
					}
					else
					{
						NoViableAltException nvae = new NoViableAltException("", 9, 2, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					NoViableAltException nvae = new NoViableAltException("", 9, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 9, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(9); }
			switch (alt9)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:47:4: ^( PARAM 'int' ID )
				{
				DebugLocation(47, 4);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(47, 6);

				_last = (CommonTree)input.LT(1);
				PARAM14=(CommonTree)Match(input,PARAM,Follow._PARAM_in_param209); 
				 
				stream_PARAM.Add(PARAM14);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(47, 12);

				_last = (CommonTree)input.LT(1);
				string_literal15=(CommonTree)Match(input,42,Follow._42_in_param211); 
				 
				stream_42.Add(string_literal15);

				DebugLocation(47, 18);

				_last = (CommonTree)input.LT(1);
				ID16=(CommonTree)Match(input,ID,Follow._ID_in_param213); 
				 
				stream_ID.Add(ID16);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}



				{
				// AST REWRITE
				// elements: PARAM, ID
				// token labels: 
				// rule labels: retval
				// token list labels: 
				// rule list labels: 
				// wildcard labels: 
				retval.Tree = root_0;
				RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

				root_0 = (CommonTree)adaptor.Nil();
				// 47:22: -> ^( PARAM TYPE_INT ID )
				{
					DebugLocation(47, 25);
					// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:47:25: ^( PARAM TYPE_INT ID )
					{
					CommonTree root_1 = (CommonTree)adaptor.Nil();
					DebugLocation(47, 27);
					root_1 = (CommonTree)adaptor.BecomeRoot(stream_PARAM.NextNode(), root_1);

					DebugLocation(47, 33);
					adaptor.AddChild(root_1, (CommonTree)adaptor.Create(TYPE_INT, "TYPE_INT"));
					DebugLocation(47, 42);
					adaptor.AddChild(root_1, stream_ID.NextNode());

					adaptor.AddChild(root_0, root_1);
					}

				}

				retval.Tree = root_0;
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:48:4: ^( PARAM 'float' ID )
				{
				DebugLocation(48, 4);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(48, 6);

				_last = (CommonTree)input.LT(1);
				PARAM17=(CommonTree)Match(input,PARAM,Follow._PARAM_in_param230); 
				 
				stream_PARAM.Add(PARAM17);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(48, 12);

				_last = (CommonTree)input.LT(1);
				string_literal18=(CommonTree)Match(input,41,Follow._41_in_param232); 
				 
				stream_41.Add(string_literal18);

				DebugLocation(48, 20);

				_last = (CommonTree)input.LT(1);
				ID19=(CommonTree)Match(input,ID,Follow._ID_in_param234); 
				 
				stream_ID.Add(ID19);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}



				{
				// AST REWRITE
				// elements: PARAM, ID
				// token labels: 
				// rule labels: retval
				// token list labels: 
				// rule list labels: 
				// wildcard labels: 
				retval.Tree = root_0;
				RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

				root_0 = (CommonTree)adaptor.Nil();
				// 48:24: -> ^( PARAM TYPE_FLOAT ID )
				{
					DebugLocation(48, 27);
					// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:48:27: ^( PARAM TYPE_FLOAT ID )
					{
					CommonTree root_1 = (CommonTree)adaptor.Nil();
					DebugLocation(48, 29);
					root_1 = (CommonTree)adaptor.BecomeRoot(stream_PARAM.NextNode(), root_1);

					DebugLocation(48, 35);
					adaptor.AddChild(root_1, (CommonTree)adaptor.Create(TYPE_FLOAT, "TYPE_FLOAT"));
					DebugLocation(48, 46);
					adaptor.AddChild(root_1, stream_ID.NextNode());

					adaptor.AddChild(root_0, root_1);
					}

				}

				retval.Tree = root_0;
				}

				}
				break;

			}
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("param", 7);
			LeaveRule("param", 7);
			LeaveRule_param();
		}
		DebugLocation(49, 1);
		} finally { DebugExitRule(GrammarFileName, "param"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "param"

	partial void EnterRule_functionCall();
	partial void LeaveRule_functionCall();
	// $ANTLR start "functionCall"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:53:1: functionCall : ^( FUNCTION_CALL ID ( arguments )? ) ;
	[GrammarRule("functionCall")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> functionCall()
	{
		EnterRule_functionCall();
		EnterRule("functionCall", 8);
		TraceIn("functionCall", 8);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree FUNCTION_CALL20 = default(CommonTree);
		CommonTree ID21 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> arguments22 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree FUNCTION_CALL20_tree = default(CommonTree);
		CommonTree ID21_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "functionCall");
		DebugLocation(53, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:54:2: ( ^( FUNCTION_CALL ID ( arguments )? ) )
			DebugEnterAlt(1);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:54:4: ^( FUNCTION_CALL ID ( arguments )? )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(54, 4);

			_last = (CommonTree)input.LT(1);
			{
			CommonTree _save_last_1 = _last;
			CommonTree _first_1 = default(CommonTree);
			CommonTree root_1 = (CommonTree)adaptor.Nil();
			DebugLocation(54, 6);

			_last = (CommonTree)input.LT(1);
			FUNCTION_CALL20=(CommonTree)Match(input,FUNCTION_CALL,Follow._FUNCTION_CALL_in_functionCall260); 
			FUNCTION_CALL20_tree = (CommonTree)adaptor.DupNode(FUNCTION_CALL20);


			root_1 = (CommonTree)adaptor.BecomeRoot(FUNCTION_CALL20_tree, root_1);


			Match(input, TokenTypes.Down, null); 
			DebugLocation(54, 20);

			_last = (CommonTree)input.LT(1);
			ID21=(CommonTree)Match(input,ID,Follow._ID_in_functionCall262); 
			ID21_tree = (CommonTree)adaptor.DupNode(ID21);


			adaptor.AddChild(root_1, ID21_tree);

			DebugLocation(54, 23);

			DebugLocation(54, 26);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:54:26: ( arguments )?
			int alt10=2;
			try { DebugEnterSubRule(10);
			try { DebugEnterDecision(10, false);
			int LA10_1 = input.LA(1);

			if ((LA10_1==FUNCTION_ARGUMENTS))
			{
				alt10 = 1;
			}
			} finally { DebugExitDecision(10); }
			switch (alt10)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:54:26: arguments
				{
				DebugLocation(54, 26);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._arguments_in_functionCall266);
				arguments22=arguments();
				PopFollow();

				adaptor.AddChild(root_1, arguments22.Tree);


				}
				break;

			}
			} finally { DebugExitSubRule(10); }


			Match(input, TokenTypes.Up, null); 
			adaptor.AddChild(root_0, root_1);
			_last = _save_last_1;
			}

			DebugLocation(54, 38);

				

			}

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("functionCall", 8);
			LeaveRule("functionCall", 8);
			LeaveRule_functionCall();
		}
		DebugLocation(56, 1);
		} finally { DebugExitRule(GrammarFileName, "functionCall"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "functionCall"

	partial void EnterRule_arguments();
	partial void LeaveRule_arguments();
	// $ANTLR start "arguments"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:58:1: arguments : ^( FUNCTION_ARGUMENTS ( argument )+ ) ;
	[GrammarRule("arguments")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> arguments()
	{
		EnterRule_arguments();
		EnterRule("arguments", 9);
		TraceIn("arguments", 9);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree FUNCTION_ARGUMENTS23 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> argument24 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree FUNCTION_ARGUMENTS23_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "arguments");
		DebugLocation(58, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:59:2: ( ^( FUNCTION_ARGUMENTS ( argument )+ ) )
			DebugEnterAlt(1);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:59:4: ^( FUNCTION_ARGUMENTS ( argument )+ )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(59, 4);

			_last = (CommonTree)input.LT(1);
			{
			CommonTree _save_last_1 = _last;
			CommonTree _first_1 = default(CommonTree);
			CommonTree root_1 = (CommonTree)adaptor.Nil();
			DebugLocation(59, 6);

			_last = (CommonTree)input.LT(1);
			FUNCTION_ARGUMENTS23=(CommonTree)Match(input,FUNCTION_ARGUMENTS,Follow._FUNCTION_ARGUMENTS_in_arguments283); 
			FUNCTION_ARGUMENTS23_tree = (CommonTree)adaptor.DupNode(FUNCTION_ARGUMENTS23);


			root_1 = (CommonTree)adaptor.BecomeRoot(FUNCTION_ARGUMENTS23_tree, root_1);


			Match(input, TokenTypes.Down, null); 
			DebugLocation(59, 25);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:59:25: ( argument )+
			int cnt11=0;
			try { DebugEnterSubRule(11);
			while (true)
			{
				int alt11=2;
				try { DebugEnterDecision(11, false);
				int LA11_1 = input.LA(1);

				if ((LA11_1==FUNCTION_ARGUMENT))
				{
					alt11 = 1;
				}


				} finally { DebugExitDecision(11); }
				switch (alt11)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:59:25: argument
					{
					DebugLocation(59, 25);

					_last = (CommonTree)input.LT(1);
					PushFollow(Follow._argument_in_arguments285);
					argument24=argument();
					PopFollow();

					adaptor.AddChild(root_1, argument24.Tree);


					}
					break;

				default:
					if (cnt11 >= 1)
						goto loop11;

					EarlyExitException eee11 = new EarlyExitException( 11, input );
					DebugRecognitionException(eee11);
					throw eee11;
				}
				cnt11++;
			}
			loop11:
				;

			} finally { DebugExitSubRule(11); }


			Match(input, TokenTypes.Up, null); 
			adaptor.AddChild(root_0, root_1);
			_last = _save_last_1;
			}


			}

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("arguments", 9);
			LeaveRule("arguments", 9);
			LeaveRule_arguments();
		}
		DebugLocation(60, 1);
		} finally { DebugExitRule(GrammarFileName, "arguments"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "arguments"

	partial void EnterRule_argument();
	partial void LeaveRule_argument();
	// $ANTLR start "argument"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:62:1: argument : ^( FUNCTION_ARGUMENT value ) ;
	[GrammarRule("argument")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> argument()
	{
		EnterRule_argument();
		EnterRule("argument", 10);
		TraceIn("argument", 10);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree FUNCTION_ARGUMENT25 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> value26 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree FUNCTION_ARGUMENT25_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "argument");
		DebugLocation(62, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:63:2: ( ^( FUNCTION_ARGUMENT value ) )
			DebugEnterAlt(1);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:63:4: ^( FUNCTION_ARGUMENT value )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(63, 4);

			_last = (CommonTree)input.LT(1);
			{
			CommonTree _save_last_1 = _last;
			CommonTree _first_1 = default(CommonTree);
			CommonTree root_1 = (CommonTree)adaptor.Nil();
			DebugLocation(63, 6);

			_last = (CommonTree)input.LT(1);
			FUNCTION_ARGUMENT25=(CommonTree)Match(input,FUNCTION_ARGUMENT,Follow._FUNCTION_ARGUMENT_in_argument300); 
			FUNCTION_ARGUMENT25_tree = (CommonTree)adaptor.DupNode(FUNCTION_ARGUMENT25);


			root_1 = (CommonTree)adaptor.BecomeRoot(FUNCTION_ARGUMENT25_tree, root_1);


			Match(input, TokenTypes.Down, null); 
			DebugLocation(63, 24);

			_last = (CommonTree)input.LT(1);
			PushFollow(Follow._value_in_argument302);
			value26=value();
			PopFollow();

			adaptor.AddChild(root_1, value26.Tree);


			Match(input, TokenTypes.Up, null); 
			adaptor.AddChild(root_0, root_1);
			_last = _save_last_1;
			}

			DebugLocation(63, 31);

					

			}

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("argument", 10);
			LeaveRule("argument", 10);
			LeaveRule_argument();
		}
		DebugLocation(65, 1);
		} finally { DebugExitRule(GrammarFileName, "argument"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "argument"

	partial void EnterRule_program();
	partial void LeaveRule_program();
	// $ANTLR start "program"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:69:1: program : ^( PROGRAM ( statement )+ ) ;
	[GrammarRule("program")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> program()
	{
		EnterRule_program();
		EnterRule("program", 11);
		TraceIn("program", 11);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree PROGRAM27 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> statement28 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree PROGRAM27_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "program");
		DebugLocation(69, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:70:2: ( ^( PROGRAM ( statement )+ ) )
			DebugEnterAlt(1);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:70:4: ^( PROGRAM ( statement )+ )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(70, 4);

			_last = (CommonTree)input.LT(1);
			{
			CommonTree _save_last_1 = _last;
			CommonTree _first_1 = default(CommonTree);
			CommonTree root_1 = (CommonTree)adaptor.Nil();
			DebugLocation(70, 6);

			_last = (CommonTree)input.LT(1);
			PROGRAM27=(CommonTree)Match(input,PROGRAM,Follow._PROGRAM_in_program319); 
			PROGRAM27_tree = (CommonTree)adaptor.DupNode(PROGRAM27);


			root_1 = (CommonTree)adaptor.BecomeRoot(PROGRAM27_tree, root_1);


			Match(input, TokenTypes.Down, null); 
			DebugLocation(70, 14);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:70:14: ( statement )+
			int cnt12=0;
			try { DebugEnterSubRule(12);
			while (true)
			{
				int alt12=2;
				try { DebugEnterDecision(12, false);
				int LA12_1 = input.LA(1);

				if ((LA12_1==ASSIGNMENT||LA12_1==DECLARATION||LA12_1==FUNCTION_CALL))
				{
					alt12 = 1;
				}


				} finally { DebugExitDecision(12); }
				switch (alt12)
				{
				case 1:
					DebugEnterAlt(1);
					// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:70:15: statement
					{
					DebugLocation(70, 15);

					_last = (CommonTree)input.LT(1);
					PushFollow(Follow._statement_in_program322);
					statement28=statement();
					PopFollow();

					adaptor.AddChild(root_1, statement28.Tree);


					}
					break;

				default:
					if (cnt12 >= 1)
						goto loop12;

					EarlyExitException eee12 = new EarlyExitException( 12, input );
					DebugRecognitionException(eee12);
					throw eee12;
				}
				cnt12++;
			}
			loop12:
				;

			} finally { DebugExitSubRule(12); }


			Match(input, TokenTypes.Up, null); 
			adaptor.AddChild(root_0, root_1);
			_last = _save_last_1;
			}


			}

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("program", 11);
			LeaveRule("program", 11);
			LeaveRule_program();
		}
		DebugLocation(71, 1);
		} finally { DebugExitRule(GrammarFileName, "program"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "program"

	partial void EnterRule_statement();
	partial void LeaveRule_statement();
	// $ANTLR start "statement"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:73:1: statement : ( declaration | assignment | functionCall );
	[GrammarRule("statement")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> statement()
	{
		EnterRule_statement();
		EnterRule("statement", 12);
		TraceIn("statement", 12);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		AstTreeRuleReturnScope<CommonTree, CommonTree> declaration29 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> assignment30 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> functionCall31 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		try { DebugEnterRule(GrammarFileName, "statement");
		DebugLocation(73, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:74:2: ( declaration | assignment | functionCall )
			int alt13=3;
			try { DebugEnterDecision(13, false);
			switch (input.LA(1))
			{
			case DECLARATION:
				{
				alt13 = 1;
				}
				break;
			case ASSIGNMENT:
				{
				alt13 = 2;
				}
				break;
			case FUNCTION_CALL:
				{
				alt13 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 13, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(13); }
			switch (alt13)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:74:4: declaration
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(74, 4);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._declaration_in_statement337);
				declaration29=declaration();
				PopFollow();

				adaptor.AddChild(root_0, declaration29.Tree);

				DebugLocation(74, 16);


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:75:4: assignment
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(75, 4);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._assignment_in_statement344);
				assignment30=assignment();
				PopFollow();

				adaptor.AddChild(root_0, assignment30.Tree);


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:76:4: functionCall
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(76, 4);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._functionCall_in_statement349);
				functionCall31=functionCall();
				PopFollow();

				adaptor.AddChild(root_0, functionCall31.Tree);


				}
				break;

			}
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("statement", 12);
			LeaveRule("statement", 12);
			LeaveRule_statement();
		}
		DebugLocation(77, 1);
		} finally { DebugExitRule(GrammarFileName, "statement"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "statement"

	partial void EnterRule_declaration();
	partial void LeaveRule_declaration();
	// $ANTLR start "declaration"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:79:1: declaration : ( ^( DECLARATION 'int' ID ) -> ^( DECLARATION TYPE_INT ID ) | ^( DECLARATION 'float' ID ) -> ^( DECLARATION TYPE_FLOAT ID ) );
	[GrammarRule("declaration")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> declaration()
	{
		EnterRule_declaration();
		EnterRule("declaration", 13);
		TraceIn("declaration", 13);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree DECLARATION32 = default(CommonTree);
		CommonTree string_literal33 = default(CommonTree);
		CommonTree ID34 = default(CommonTree);
		CommonTree DECLARATION35 = default(CommonTree);
		CommonTree string_literal36 = default(CommonTree);
		CommonTree ID37 = default(CommonTree);

		CommonTree DECLARATION32_tree = default(CommonTree);
		CommonTree string_literal33_tree = default(CommonTree);
		CommonTree ID34_tree = default(CommonTree);
		CommonTree DECLARATION35_tree = default(CommonTree);
		CommonTree string_literal36_tree = default(CommonTree);
		CommonTree ID37_tree = default(CommonTree);
		RewriteRuleNodeStream stream_42=new RewriteRuleNodeStream(adaptor,"token 42");
		RewriteRuleNodeStream stream_41=new RewriteRuleNodeStream(adaptor,"token 41");
		RewriteRuleNodeStream stream_ID=new RewriteRuleNodeStream(adaptor,"token ID");
		RewriteRuleNodeStream stream_DECLARATION=new RewriteRuleNodeStream(adaptor,"token DECLARATION");
		try { DebugEnterRule(GrammarFileName, "declaration");
		DebugLocation(79, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:80:2: ( ^( DECLARATION 'int' ID ) -> ^( DECLARATION TYPE_INT ID ) | ^( DECLARATION 'float' ID ) -> ^( DECLARATION TYPE_FLOAT ID ) )
			int alt14=2;
			try { DebugEnterDecision(14, false);
			int LA14_1 = input.LA(1);

			if ((LA14_1==DECLARATION))
			{
				int LA14_2 = input.LA(2);

				if ((LA14_2==DOWN))
				{
					int LA14_3 = input.LA(3);

					if ((LA14_3==42))
					{
						alt14 = 1;
					}
					else if ((LA14_3==41))
					{
						alt14 = 2;
					}
					else
					{
						NoViableAltException nvae = new NoViableAltException("", 14, 2, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					NoViableAltException nvae = new NoViableAltException("", 14, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 14, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(14); }
			switch (alt14)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:80:4: ^( DECLARATION 'int' ID )
				{
				DebugLocation(80, 4);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(80, 6);

				_last = (CommonTree)input.LT(1);
				DECLARATION32=(CommonTree)Match(input,DECLARATION,Follow._DECLARATION_in_declaration362); 
				 
				stream_DECLARATION.Add(DECLARATION32);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(80, 18);

				_last = (CommonTree)input.LT(1);
				string_literal33=(CommonTree)Match(input,42,Follow._42_in_declaration364); 
				 
				stream_42.Add(string_literal33);

				DebugLocation(80, 24);

				_last = (CommonTree)input.LT(1);
				ID34=(CommonTree)Match(input,ID,Follow._ID_in_declaration366); 
				 
				stream_ID.Add(ID34);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}



				{
				// AST REWRITE
				// elements: DECLARATION, ID
				// token labels: 
				// rule labels: retval
				// token list labels: 
				// rule list labels: 
				// wildcard labels: 
				retval.Tree = root_0;
				RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

				root_0 = (CommonTree)adaptor.Nil();
				// 80:28: -> ^( DECLARATION TYPE_INT ID )
				{
					DebugLocation(80, 31);
					// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:80:31: ^( DECLARATION TYPE_INT ID )
					{
					CommonTree root_1 = (CommonTree)adaptor.Nil();
					DebugLocation(80, 33);
					root_1 = (CommonTree)adaptor.BecomeRoot(stream_DECLARATION.NextNode(), root_1);

					DebugLocation(80, 45);
					adaptor.AddChild(root_1, (CommonTree)adaptor.Create(TYPE_INT, "TYPE_INT"));
					DebugLocation(80, 54);
					adaptor.AddChild(root_1, stream_ID.NextNode());

					adaptor.AddChild(root_0, root_1);
					}
					DebugLocation(80, 58);
					adaptor.AddChild(root_0, 
									);

				}

				retval.Tree = root_0;
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:82:4: ^( DECLARATION 'float' ID )
				{
				DebugLocation(82, 4);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(82, 6);

				_last = (CommonTree)input.LT(1);
				DECLARATION35=(CommonTree)Match(input,DECLARATION,Follow._DECLARATION_in_declaration385); 
				 
				stream_DECLARATION.Add(DECLARATION35);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(82, 18);

				_last = (CommonTree)input.LT(1);
				string_literal36=(CommonTree)Match(input,41,Follow._41_in_declaration387); 
				 
				stream_41.Add(string_literal36);

				DebugLocation(82, 26);

				_last = (CommonTree)input.LT(1);
				ID37=(CommonTree)Match(input,ID,Follow._ID_in_declaration389); 
				 
				stream_ID.Add(ID37);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}



				{
				// AST REWRITE
				// elements: ID, DECLARATION
				// token labels: 
				// rule labels: retval
				// token list labels: 
				// rule list labels: 
				// wildcard labels: 
				retval.Tree = root_0;
				RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

				root_0 = (CommonTree)adaptor.Nil();
				// 82:30: -> ^( DECLARATION TYPE_FLOAT ID )
				{
					DebugLocation(82, 33);
					// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:82:33: ^( DECLARATION TYPE_FLOAT ID )
					{
					CommonTree root_1 = (CommonTree)adaptor.Nil();
					DebugLocation(82, 35);
					root_1 = (CommonTree)adaptor.BecomeRoot(stream_DECLARATION.NextNode(), root_1);

					DebugLocation(82, 47);
					adaptor.AddChild(root_1, (CommonTree)adaptor.Create(TYPE_FLOAT, "TYPE_FLOAT"));
					DebugLocation(82, 58);
					adaptor.AddChild(root_1, stream_ID.NextNode());

					adaptor.AddChild(root_0, root_1);
					}
					DebugLocation(82, 62);
					adaptor.AddChild(root_0, 
									);

				}

				retval.Tree = root_0;
				}

				}
				break;

			}
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("declaration", 13);
			LeaveRule("declaration", 13);
			LeaveRule_declaration();
		}
		DebugLocation(84, 1);
		} finally { DebugExitRule(GrammarFileName, "declaration"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "declaration"

	partial void EnterRule_assignment();
	partial void LeaveRule_assignment();
	// $ANTLR start "assignment"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:86:1: assignment : ^( ASSIGNMENT ID addSubExp ) ;
	[GrammarRule("assignment")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> assignment()
	{
		EnterRule_assignment();
		EnterRule("assignment", 14);
		TraceIn("assignment", 14);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree ASSIGNMENT38 = default(CommonTree);
		CommonTree ID39 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> addSubExp40 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree ASSIGNMENT38_tree = default(CommonTree);
		CommonTree ID39_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "assignment");
		DebugLocation(86, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:87:2: ( ^( ASSIGNMENT ID addSubExp ) )
			DebugEnterAlt(1);
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:87:4: ^( ASSIGNMENT ID addSubExp )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(87, 4);

			_last = (CommonTree)input.LT(1);
			{
			CommonTree _save_last_1 = _last;
			CommonTree _first_1 = default(CommonTree);
			CommonTree root_1 = (CommonTree)adaptor.Nil();
			DebugLocation(87, 6);

			_last = (CommonTree)input.LT(1);
			ASSIGNMENT38=(CommonTree)Match(input,ASSIGNMENT,Follow._ASSIGNMENT_in_assignment415); 
			ASSIGNMENT38_tree = (CommonTree)adaptor.DupNode(ASSIGNMENT38);


			root_1 = (CommonTree)adaptor.BecomeRoot(ASSIGNMENT38_tree, root_1);


			Match(input, TokenTypes.Down, null); 
			DebugLocation(87, 17);

			_last = (CommonTree)input.LT(1);
			ID39=(CommonTree)Match(input,ID,Follow._ID_in_assignment417); 
			ID39_tree = (CommonTree)adaptor.DupNode(ID39);


			adaptor.AddChild(root_1, ID39_tree);

			DebugLocation(87, 20);

			_last = (CommonTree)input.LT(1);
			PushFollow(Follow._addSubExp_in_assignment419);
			addSubExp40=addSubExp();
			PopFollow();

			adaptor.AddChild(root_1, addSubExp40.Tree);


			Match(input, TokenTypes.Up, null); 
			adaptor.AddChild(root_0, root_1);
			_last = _save_last_1;
			}

			DebugLocation(87, 31);

							

			}

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("assignment", 14);
			LeaveRule("assignment", 14);
			LeaveRule_assignment();
		}
		DebugLocation(89, 1);
		} finally { DebugExitRule(GrammarFileName, "assignment"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "assignment"

	partial void EnterRule_addSubExp();
	partial void LeaveRule_addSubExp();
	// $ANTLR start "addSubExp"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:91:1: addSubExp : ( mulDivExp | ^( '+' mulDivExp mulDivExp ) | ^( '-' mulDivExp mulDivExp ) );
	[GrammarRule("addSubExp")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> addSubExp()
	{
		EnterRule_addSubExp();
		EnterRule("addSubExp", 15);
		TraceIn("addSubExp", 15);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree char_literal42 = default(CommonTree);
		CommonTree char_literal45 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> mulDivExp41 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> mulDivExp43 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> mulDivExp44 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> mulDivExp46 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> mulDivExp47 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree char_literal42_tree = default(CommonTree);
		CommonTree char_literal45_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "addSubExp");
		DebugLocation(91, 3);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:92:2: ( mulDivExp | ^( '+' mulDivExp mulDivExp ) | ^( '-' mulDivExp mulDivExp ) )
			int alt15=3;
			try { DebugEnterDecision(15, false);
			switch (input.LA(1))
			{
			case LITERAL:
			case PARENEXP:
			case UNARY:
			case VARIABLE:
			case 30:
			case 34:
				{
				alt15 = 1;
				}
				break;
			case 31:
				{
				alt15 = 2;
				}
				break;
			case 33:
				{
				alt15 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 15, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(15); }
			switch (alt15)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:92:5: mulDivExp
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(92, 5);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._mulDivExp_in_addSubExp435);
				mulDivExp41=mulDivExp();
				PopFollow();

				adaptor.AddChild(root_0, mulDivExp41.Tree);


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:93:7: ^( '+' mulDivExp mulDivExp )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(93, 7);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(93, 9);

				_last = (CommonTree)input.LT(1);
				char_literal42=(CommonTree)Match(input,31,Follow._31_in_addSubExp444); 
				char_literal42_tree = (CommonTree)adaptor.DupNode(char_literal42);


				root_1 = (CommonTree)adaptor.BecomeRoot(char_literal42_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(93, 13);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._mulDivExp_in_addSubExp446);
				mulDivExp43=mulDivExp();
				PopFollow();

				adaptor.AddChild(root_1, mulDivExp43.Tree);

				DebugLocation(93, 23);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._mulDivExp_in_addSubExp448);
				mulDivExp44=mulDivExp();
				PopFollow();

				adaptor.AddChild(root_1, mulDivExp44.Tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}

				DebugLocation(93, 34);

				  		

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:95:7: ^( '-' mulDivExp mulDivExp )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(95, 7);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(95, 9);

				_last = (CommonTree)input.LT(1);
				char_literal45=(CommonTree)Match(input,33,Follow._33_in_addSubExp460); 
				char_literal45_tree = (CommonTree)adaptor.DupNode(char_literal45);


				root_1 = (CommonTree)adaptor.BecomeRoot(char_literal45_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(95, 13);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._mulDivExp_in_addSubExp462);
				mulDivExp46=mulDivExp();
				PopFollow();

				adaptor.AddChild(root_1, mulDivExp46.Tree);

				DebugLocation(95, 23);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._mulDivExp_in_addSubExp464);
				mulDivExp47=mulDivExp();
				PopFollow();

				adaptor.AddChild(root_1, mulDivExp47.Tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}

				DebugLocation(95, 34);

				  		

				}
				break;

			}
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("addSubExp", 15);
			LeaveRule("addSubExp", 15);
			LeaveRule_addSubExp();
		}
		DebugLocation(97, 3);
		} finally { DebugExitRule(GrammarFileName, "addSubExp"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "addSubExp"

	partial void EnterRule_mulDivExp();
	partial void LeaveRule_mulDivExp();
	// $ANTLR start "mulDivExp"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:99:1: mulDivExp : ( unaryExp | ^( '*' unaryExp unaryExp ) | ^( '/' unaryExp unaryExp ) );
	[GrammarRule("mulDivExp")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> mulDivExp()
	{
		EnterRule_mulDivExp();
		EnterRule("mulDivExp", 16);
		TraceIn("mulDivExp", 16);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree char_literal49 = default(CommonTree);
		CommonTree char_literal52 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> unaryExp48 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> unaryExp50 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> unaryExp51 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> unaryExp53 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> unaryExp54 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree char_literal49_tree = default(CommonTree);
		CommonTree char_literal52_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "mulDivExp");
		DebugLocation(99, 3);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:100:2: ( unaryExp | ^( '*' unaryExp unaryExp ) | ^( '/' unaryExp unaryExp ) )
			int alt16=3;
			try { DebugEnterDecision(16, false);
			switch (input.LA(1))
			{
			case LITERAL:
			case PARENEXP:
			case UNARY:
			case VARIABLE:
				{
				alt16 = 1;
				}
				break;
			case 30:
				{
				alt16 = 2;
				}
				break;
			case 34:
				{
				alt16 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 16, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(16); }
			switch (alt16)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:100:5: unaryExp
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(100, 5);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._unaryExp_in_mulDivExp481);
				unaryExp48=unaryExp();
				PopFollow();

				adaptor.AddChild(root_0, unaryExp48.Tree);


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:101:7: ^( '*' unaryExp unaryExp )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(101, 7);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(101, 9);

				_last = (CommonTree)input.LT(1);
				char_literal49=(CommonTree)Match(input,30,Follow._30_in_mulDivExp490); 
				char_literal49_tree = (CommonTree)adaptor.DupNode(char_literal49);


				root_1 = (CommonTree)adaptor.BecomeRoot(char_literal49_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(101, 13);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._unaryExp_in_mulDivExp492);
				unaryExp50=unaryExp();
				PopFollow();

				adaptor.AddChild(root_1, unaryExp50.Tree);

				DebugLocation(101, 22);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._unaryExp_in_mulDivExp494);
				unaryExp51=unaryExp();
				PopFollow();

				adaptor.AddChild(root_1, unaryExp51.Tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}

				DebugLocation(101, 32);

				  		

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:103:6: ^( '/' unaryExp unaryExp )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(103, 6);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(103, 8);

				_last = (CommonTree)input.LT(1);
				char_literal52=(CommonTree)Match(input,34,Follow._34_in_mulDivExp505); 
				char_literal52_tree = (CommonTree)adaptor.DupNode(char_literal52);


				root_1 = (CommonTree)adaptor.BecomeRoot(char_literal52_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(103, 12);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._unaryExp_in_mulDivExp507);
				unaryExp53=unaryExp();
				PopFollow();

				adaptor.AddChild(root_1, unaryExp53.Tree);

				DebugLocation(103, 21);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._unaryExp_in_mulDivExp509);
				unaryExp54=unaryExp();
				PopFollow();

				adaptor.AddChild(root_1, unaryExp54.Tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}

				DebugLocation(103, 31);

				 		

				}
				break;

			}
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("mulDivExp", 16);
			LeaveRule("mulDivExp", 16);
			LeaveRule_mulDivExp();
		}
		DebugLocation(105, 3);
		} finally { DebugExitRule(GrammarFileName, "mulDivExp"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "mulDivExp"

	partial void EnterRule_unaryExp();
	partial void LeaveRule_unaryExp();
	// $ANTLR start "unaryExp"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:107:1: unaryExp : ( ^( UNARY value ) | value );
	[GrammarRule("unaryExp")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> unaryExp()
	{
		EnterRule_unaryExp();
		EnterRule("unaryExp", 17);
		TraceIn("unaryExp", 17);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree UNARY55 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> value56 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);
		AstTreeRuleReturnScope<CommonTree, CommonTree> value57 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree UNARY55_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "unaryExp");
		DebugLocation(107, 3);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:108:4: ( ^( UNARY value ) | value )
			int alt17=2;
			try { DebugEnterDecision(17, false);
			int LA17_1 = input.LA(1);

			if ((LA17_1==UNARY))
			{
				alt17 = 1;
			}
			else if ((LA17_1==LITERAL||LA17_1==PARENEXP||LA17_1==VARIABLE))
			{
				alt17 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 17, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(17); }
			switch (alt17)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:108:7: ^( UNARY value )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(108, 7);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(108, 9);

				_last = (CommonTree)input.LT(1);
				UNARY55=(CommonTree)Match(input,UNARY,Follow._UNARY_in_unaryExp530); 
				UNARY55_tree = (CommonTree)adaptor.DupNode(UNARY55);


				root_1 = (CommonTree)adaptor.BecomeRoot(UNARY55_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(108, 15);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._value_in_unaryExp532);
				value56=value();
				PopFollow();

				adaptor.AddChild(root_1, value56.Tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}

				DebugLocation(108, 22);

				  			

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:110:5: value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(110, 5);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._value_in_unaryExp541);
				value57=value();
				PopFollow();

				adaptor.AddChild(root_0, value57.Tree);


				}
				break;

			}
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("unaryExp", 17);
			LeaveRule("unaryExp", 17);
			LeaveRule_unaryExp();
		}
		DebugLocation(111, 3);
		} finally { DebugExitRule(GrammarFileName, "unaryExp"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "unaryExp"

	partial void EnterRule_value();
	partial void LeaveRule_value();
	// $ANTLR start "value"
	// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:113:1: value : ( ^( VARIABLE ID ) | ^( LITERAL TYPE_INT INT ) | ^( LITERAL TYPE_FLOAT FLOAT ) | ^( PARENEXP addSubExp ) );
	[GrammarRule("value")]
	private AstTreeRuleReturnScope<CommonTree, CommonTree> value()
	{
		EnterRule_value();
		EnterRule("value", 18);
		TraceIn("value", 18);
		AstTreeRuleReturnScope<CommonTree, CommonTree> retval = new AstTreeRuleReturnScope<CommonTree, CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		CommonTree _first_0 = default(CommonTree);
		CommonTree _last = default(CommonTree);

		CommonTree VARIABLE58 = default(CommonTree);
		CommonTree ID59 = default(CommonTree);
		CommonTree LITERAL60 = default(CommonTree);
		CommonTree TYPE_INT61 = default(CommonTree);
		CommonTree INT62 = default(CommonTree);
		CommonTree LITERAL63 = default(CommonTree);
		CommonTree TYPE_FLOAT64 = default(CommonTree);
		CommonTree FLOAT65 = default(CommonTree);
		CommonTree PARENEXP66 = default(CommonTree);
		AstTreeRuleReturnScope<CommonTree, CommonTree> addSubExp67 = default(AstTreeRuleReturnScope<CommonTree, CommonTree>);

		CommonTree VARIABLE58_tree = default(CommonTree);
		CommonTree ID59_tree = default(CommonTree);
		CommonTree LITERAL60_tree = default(CommonTree);
		CommonTree TYPE_INT61_tree = default(CommonTree);
		CommonTree INT62_tree = default(CommonTree);
		CommonTree LITERAL63_tree = default(CommonTree);
		CommonTree TYPE_FLOAT64_tree = default(CommonTree);
		CommonTree FLOAT65_tree = default(CommonTree);
		CommonTree PARENEXP66_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "value");
		DebugLocation(113, 1);
		if (RuleLevel == 0)
			DebugListener.Commence();
		IncRuleLevel();
		try
		{
			// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:114:2: ( ^( VARIABLE ID ) | ^( LITERAL TYPE_INT INT ) | ^( LITERAL TYPE_FLOAT FLOAT ) | ^( PARENEXP addSubExp ) )
			int alt18=4;
			try { DebugEnterDecision(18, false);
			switch (input.LA(1))
			{
			case VARIABLE:
				{
				alt18 = 1;
				}
				break;
			case LITERAL:
				{
				int LA18_2 = input.LA(2);

				if ((LA18_2==DOWN))
				{
					int LA18_3 = input.LA(3);

					if ((LA18_3==TYPE_INT))
					{
						alt18 = 2;
					}
					else if ((LA18_3==TYPE_FLOAT))
					{
						alt18 = 3;
					}
					else
					{
						NoViableAltException nvae = new NoViableAltException("", 18, 4, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					NoViableAltException nvae = new NoViableAltException("", 18, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case PARENEXP:
				{
				alt18 = 4;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 18, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(18); }
			switch (alt18)
			{
			case 1:
				DebugEnterAlt(1);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:114:4: ^( VARIABLE ID )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(114, 4);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(114, 6);

				_last = (CommonTree)input.LT(1);
				VARIABLE58=(CommonTree)Match(input,VARIABLE,Follow._VARIABLE_in_value558); 
				VARIABLE58_tree = (CommonTree)adaptor.DupNode(VARIABLE58);


				root_1 = (CommonTree)adaptor.BecomeRoot(VARIABLE58_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(114, 15);

				_last = (CommonTree)input.LT(1);
				ID59=(CommonTree)Match(input,ID,Follow._ID_in_value560); 
				ID59_tree = (CommonTree)adaptor.DupNode(ID59);


				adaptor.AddChild(root_1, ID59_tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}

				DebugLocation(114, 19);


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:115:4: ^( LITERAL TYPE_INT INT )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(115, 4);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(115, 6);

				_last = (CommonTree)input.LT(1);
				LITERAL60=(CommonTree)Match(input,LITERAL,Follow._LITERAL_in_value569); 
				LITERAL60_tree = (CommonTree)adaptor.DupNode(LITERAL60);


				root_1 = (CommonTree)adaptor.BecomeRoot(LITERAL60_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(115, 14);

				_last = (CommonTree)input.LT(1);
				TYPE_INT61=(CommonTree)Match(input,TYPE_INT,Follow._TYPE_INT_in_value571); 
				TYPE_INT61_tree = (CommonTree)adaptor.DupNode(TYPE_INT61);


				adaptor.AddChild(root_1, TYPE_INT61_tree);

				DebugLocation(115, 23);

				_last = (CommonTree)input.LT(1);
				INT62=(CommonTree)Match(input,INT,Follow._INT_in_value573); 
				INT62_tree = (CommonTree)adaptor.DupNode(INT62);


				adaptor.AddChild(root_1, INT62_tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}

				DebugLocation(115, 28);

									

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:117:4: ^( LITERAL TYPE_FLOAT FLOAT )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(117, 4);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(117, 6);

				_last = (CommonTree)input.LT(1);
				LITERAL63=(CommonTree)Match(input,LITERAL,Follow._LITERAL_in_value582); 
				LITERAL63_tree = (CommonTree)adaptor.DupNode(LITERAL63);


				root_1 = (CommonTree)adaptor.BecomeRoot(LITERAL63_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(117, 14);

				_last = (CommonTree)input.LT(1);
				TYPE_FLOAT64=(CommonTree)Match(input,TYPE_FLOAT,Follow._TYPE_FLOAT_in_value584); 
				TYPE_FLOAT64_tree = (CommonTree)adaptor.DupNode(TYPE_FLOAT64);


				adaptor.AddChild(root_1, TYPE_FLOAT64_tree);

				DebugLocation(117, 25);

				_last = (CommonTree)input.LT(1);
				FLOAT65=(CommonTree)Match(input,FLOAT,Follow._FLOAT_in_value586); 
				FLOAT65_tree = (CommonTree)adaptor.DupNode(FLOAT65);


				adaptor.AddChild(root_1, FLOAT65_tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}

				DebugLocation(117, 32);
				 
									

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// C:\\Users\\zeano_000\\Dropbox\\NeoInterpreter\\NeoCompiler\\NeoPreTreePass1.g:119:4: ^( PARENEXP addSubExp )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(119, 4);

				_last = (CommonTree)input.LT(1);
				{
				CommonTree _save_last_1 = _last;
				CommonTree _first_1 = default(CommonTree);
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(119, 6);

				_last = (CommonTree)input.LT(1);
				PARENEXP66=(CommonTree)Match(input,PARENEXP,Follow._PARENEXP_in_value595); 
				PARENEXP66_tree = (CommonTree)adaptor.DupNode(PARENEXP66);


				root_1 = (CommonTree)adaptor.BecomeRoot(PARENEXP66_tree, root_1);


				Match(input, TokenTypes.Down, null); 
				DebugLocation(119, 15);

				_last = (CommonTree)input.LT(1);
				PushFollow(Follow._addSubExp_in_value597);
				addSubExp67=addSubExp();
				PopFollow();

				adaptor.AddChild(root_1, addSubExp67.Tree);


				Match(input, TokenTypes.Up, null); 
				adaptor.AddChild(root_0, root_1);
				_last = _save_last_1;
				}


				}
				break;

			}
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("value", 18);
			LeaveRule("value", 18);
			LeaveRule_value();
		}
		DebugLocation(120, 1);
		} finally { DebugExitRule(GrammarFileName, "value"); }
		DecRuleLevel();
		if (RuleLevel == 0)
			DebugListener.Terminate();
		return retval;

	}
	// $ANTLR end "value"
	#endregion Rules


	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _FILE_in_file58 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _script_in_file60 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _SCRIPT_in_script74 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _functionDefs_in_script76 = new BitSet(new ulong[]{0x0000000000200008UL});
		public static readonly BitSet _program_in_script79 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _SCRIPT_in_script90 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _program_in_script92 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _FUNCTION_DEFS_in_functionDefs108 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _functionDef_in_functionDefs110 = new BitSet(new ulong[]{0x0000000000002008UL});
		public static readonly BitSet _FUNCTION_DEF_in_functionDef125 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _ID_in_functionDef129 = new BitSet(new ulong[]{0x0000000000080808UL});
		public static readonly BitSet _parameters_in_functionDef134 = new BitSet(new ulong[]{0x0000000000000808UL});
		public static readonly BitSet _body_in_functionDef143 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _FUNCTION_BODY_in_body163 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _statement_in_body168 = new BitSet(new ulong[]{0x0000000000001058UL});
		public static readonly BitSet _PARAMS_in_parameters188 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _param_in_parameters191 = new BitSet(new ulong[]{0x0000000000040008UL});
		public static readonly BitSet _PARAM_in_param209 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _42_in_param211 = new BitSet(new ulong[]{0x0000000000008000UL});
		public static readonly BitSet _ID_in_param213 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _PARAM_in_param230 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _41_in_param232 = new BitSet(new ulong[]{0x0000000000008000UL});
		public static readonly BitSet _ID_in_param234 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _FUNCTION_CALL_in_functionCall260 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _ID_in_functionCall262 = new BitSet(new ulong[]{0x0000000000000408UL});
		public static readonly BitSet _arguments_in_functionCall266 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _FUNCTION_ARGUMENTS_in_arguments283 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _argument_in_arguments285 = new BitSet(new ulong[]{0x0000000000000208UL});
		public static readonly BitSet _FUNCTION_ARGUMENT_in_argument300 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _value_in_argument302 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _PROGRAM_in_program319 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _statement_in_program322 = new BitSet(new ulong[]{0x0000000000001058UL});
		public static readonly BitSet _declaration_in_statement337 = new BitSet(new ulong[]{0x0000000000000002UL});
		public static readonly BitSet _assignment_in_statement344 = new BitSet(new ulong[]{0x0000000000000002UL});
		public static readonly BitSet _functionCall_in_statement349 = new BitSet(new ulong[]{0x0000000000000002UL});
		public static readonly BitSet _DECLARATION_in_declaration362 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _42_in_declaration364 = new BitSet(new ulong[]{0x0000000000008000UL});
		public static readonly BitSet _ID_in_declaration366 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _DECLARATION_in_declaration385 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _41_in_declaration387 = new BitSet(new ulong[]{0x0000000000008000UL});
		public static readonly BitSet _ID_in_declaration389 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _ASSIGNMENT_in_assignment415 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _ID_in_assignment417 = new BitSet(new ulong[]{0x00000006C6120000UL});
		public static readonly BitSet _addSubExp_in_assignment419 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _mulDivExp_in_addSubExp435 = new BitSet(new ulong[]{0x0000000000000002UL});
		public static readonly BitSet _31_in_addSubExp444 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _mulDivExp_in_addSubExp446 = new BitSet(new ulong[]{0x0000000446120000UL});
		public static readonly BitSet _mulDivExp_in_addSubExp448 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _33_in_addSubExp460 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _mulDivExp_in_addSubExp462 = new BitSet(new ulong[]{0x0000000446120000UL});
		public static readonly BitSet _mulDivExp_in_addSubExp464 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _unaryExp_in_mulDivExp481 = new BitSet(new ulong[]{0x0000000000000002UL});
		public static readonly BitSet _30_in_mulDivExp490 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _unaryExp_in_mulDivExp492 = new BitSet(new ulong[]{0x0000000006120000UL});
		public static readonly BitSet _unaryExp_in_mulDivExp494 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _34_in_mulDivExp505 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _unaryExp_in_mulDivExp507 = new BitSet(new ulong[]{0x0000000006120000UL});
		public static readonly BitSet _unaryExp_in_mulDivExp509 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _UNARY_in_unaryExp530 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _value_in_unaryExp532 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _value_in_unaryExp541 = new BitSet(new ulong[]{0x0000000000000002UL});
		public static readonly BitSet _VARIABLE_in_value558 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _ID_in_value560 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _LITERAL_in_value569 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _TYPE_INT_in_value571 = new BitSet(new ulong[]{0x0000010000000000UL});
		public static readonly BitSet _INT_in_value573 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _LITERAL_in_value582 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _TYPE_FLOAT_in_value584 = new BitSet(new ulong[]{0x0000008000000000UL});
		public static readonly BitSet _FLOAT_in_value586 = new BitSet(new ulong[]{0x0000000000000008UL});
		public static readonly BitSet _PARENEXP_in_value595 = new BitSet(new ulong[]{0x0000000000000004UL});
		public static readonly BitSet _addSubExp_in_value597 = new BitSet(new ulong[]{0x0000000000000008UL});
	}
	#endregion Follow sets
}
